@forward "vars";
@use "vars";

$breakpoints: (
  sm: 640px,
  lg: 1024px,
);

// --------------------------------
// Gallery
// --------------------------------

.gallery {
  display: flex;
  flex-wrap: wrap;
  gap: vars.$gallery-gap;

  &:after {
    content: "";
    flex-grow: 9999999;
    min-width: vars.$gallery-item-height;
    height: 0;

    @media (min-width: map-get($breakpoints, sm)) {
      min-width: vars.$gallery-item-height-sm;
    }

    @media (min-width: map-get($breakpoints, lg)) {
      min-width: vars.$gallery-item-height-lg;
    }
  }
}

.gallery-item {
  flex-grow: 1;
  height: vars.$gallery-item-height;
  border-radius: vars.$gallery-item-border-radius;
  position: relative;
  cursor: pointer;
  overflow: hidden;

  @media (min-width: map-get($breakpoints, sm)) {
    height: vars.$gallery-item-height-sm;
  }

  @media (min-width: map-get($breakpoints, lg)) {
    height: vars.$gallery-item-height-lg;
  }

  &::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    opacity: 0;
    background: vars.$gallery-item-overlay-bg;
    transition: opacity 250ms;
    z-index: 10;
  }

  img {
    display: inline-block;
    max-width: 100%;
    min-width: 100%;
    height: 100%;
    width: unset;
    object-fit: cover;
    text-align: center;
    background-color: vars.$gallery-item-thumb-bg-color;
    transition: filter 500ms, transform 500ms;
  }

  .caption {
    position: absolute;
    text-align: center;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 1em;
    color: #fff;
    font-size: 0.85em;
    line-height: 1em;
    background-color: vars.$gallery-item-caption-bg-color;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    transform: translateY(100%);
    transition: transform 250ms;
    z-index: 20;
  }

  &:hover,
  &:focus {
    img {
      transform: scale(1.05);
    }

    @media (hover: hover) and (pointer: fine) {
      &::after {
        opacity: 1;
      }

      .caption {
        transform: translateY(0);
      }
    }
  }

  .placeholder {
    filter: blur(20px);
  }
}

// --------------------------------
// Lightbox
// --------------------------------
.lightbox {
  display: flex;
  flex-direction: column;
  height: 100%;
  color: vars.$lightbox-text-color;
  background-color: vars.$lightbox-bg-color;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: vars.$lightbox-z-index;

  &[hidden] {
    display: none;
  }

  .lightbox-header {
    flex-shrink: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: vars.$lightbox-header-bg-color;
    padding: vars.$lightbox-header-padding;
    font-weight: vars.$lightbox-header-font-weight;
    text-align: center;

    &>* {
      opacity: 0.75;
    }
  }

  .lightbox-close {
    position: relative;
    height: 3rem;
    width: 3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    background: transparent vars.$lightbox-close-bg-image center / 3rem no-repeat;

    &:hover {
      opacity: 1;
      background-color: rgba(#777, 0.25);
    }
  }

  .lightbox-slides-wrapper {
    flex-grow: 1;
    display: flex;
    overflow: hidden;
    position: relative;
  }

  .lightbox-arrow {
    position: absolute;
    top: 50%;
    width: 4rem;
    height: 4rem;
    padding: 0.5rem;
    background: transparent vars.$lightbox-close-bg-image center / 3rem no-repeat;
    border: none;
    opacity: 0.75;
    cursor: pointer;
    filter: drop-shadow(0 0 7px #000);

    &:hover,
    &:focus {
      opacity: 1;
      filter: none;
      background-color: rgba(#777, 0.25);
    }

    &.arrow-left {
      left: 0;
      background-image: vars.$lightbox-arrow-left-bg-image;
    }

    &.arrow-right {
      right: 0;
      background-image: vars.$lightbox-arrow-right-bg-image;
    }
  }

  .lightbox-slide {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-grow: 1;
    transition: all 0ms ease;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    &[data-state="prev"] {
      transform: translateX(-100%);
      opacity: 0;
    }

    &[data-state="next"] {
      transform: translateX(100%);
      opacity: 0;
    }
  }

  .lightbox-image {
    max-width: 100%;
    max-height: 100%;
  }

  .lightbox-spinner {
    width: 2em;
    height: 2em;
    vertical-align: -0.125em;
    border: 0.2em solid currentColor;
    border-right-color: transparent;
    border-radius: 50%;
    animation: 0.75s linear infinite spinner;

    @keyframes spinner {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }
  }
}